ls
getwd()
# install.packages("MASS"")
# install.packages("ISLR")
library("MASS")
library("ISLR")
Auto_local = Auto
attach(Auto_local)
install.packages("googlesheets")
library(googlesheets)
gs_ls()
gs_ls()
7969177/1024
gs_ls()
gs_ls()
library(googlesheets)
suppressMessages(library(googlesheets))
gs_ls()
16384/8192
gs_ls()
png("output_documents/8_C_2.png")
scater_plot_matrix = pairs(CSV_file[, 1:10])
dev.off()
getwd()
dev.off()
dirname(rstudioapi::getSourceEditorContext()$path)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
ISLR::College
dirname(rstudioapi::getSourceEditorContext()$path)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
# Set the working dorectory to the location where the file was saved
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
rstudioapi::getSourceEditorContext()
rstudioapi::getSourceEditorContext()$path
library(tidyverse)
detach("package:tidyverse", unload = TRUE)
install.packages("tidyverse")
install.packages("kaggler")
install.packages("installr")
library("installr")
install.packages("KernSmooth")
install.packages("KernSmooth")
install.packages("installr")
install.packages("kaggler")
library("kaggler")
make check
make
update.packages(ask = FALSE)
install.packages("installr")
library("installr")
devtools::install_packages("mkearney/kaggler")
install.packages("devtools")
library("kaggler")
devtools::install_packages("mkearney/kaggler")
devtools::install_cran("mkearney/kaggler")
devtools::install_cran("kaggler")
# Clear all existing variables in global environment
rm(list = ls())
# CLear plot tab and close/save any open files
dev.off()
# Set the working dorectory to the location where the file was saved
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
# Save local copy of ISLR's Auto data
Auto_local = ISLR::Auto
# Attach reference varables from data set
attach(Auto_local)
Auto_local[["mpg01"]] =  as.integer(Auto_local$mpg > median(Auto_local$mpg))
mpg01 = factor(mpg, ordered = F, levels = c(0,1))
Auto_local = data.frame(Auto_local,mpg01)
summary(Auto_local)
# Clear all existing variables in global environment
rm(list = ls())
# CLear plot tab and close/save any open files
dev.off()
# Set the working dorectory to the location where the file was saved
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
# Save local copy of ISLR's Auto data
Auto_local = ISLR::Auto
# Attach reference varables from data set
attach(Auto_local)
Auto_local[["mpg01"]] =  as.integer(Auto_local$mpg > median(Auto_local$mpg))
mpg01 = ifelse(mpg>median(mpg), 1, 0)
mpg01
Auto_local$mpg01
Auto_local[["mpg01"]] =  as.factor(as.integer(Auto_local$mpg > median(Auto_local$mpg)))
mpg01 = factor(mpg, ordered = F, levels = c(0,1))
mpg01 = ifelse(mpg>median(mpg), 1, 0)
Auto_local = data.frame(Auto_local,mpg01)
# Clear all existing variables in global environment
rm(list = ls())
# Save local copy of ISLR's Auto data
Auto_local = ISLR::Auto
# Attach reference varables from data set
attach(Auto_local)
Auto_local[["mpg01"]] =  as.factor(as.integer(Auto_local$mpg > median(Auto_local$mpg)))
Auto_local$mpg01
?factor
Auto_local[["mpg01"]] = integer(Auto_local$mpg > median(Auto_local$mpg))
Auto_local[["mpg01"]] = as.integer(Auto_local$mpg > median(Auto_local$mpg))
Auto_local[["mpg01"]] = factor(Auto_local$mpg > median(Auto_local$mpg))
integer
Auto_local[["mpg01"]] = factor(integer(Auto_local$mpg > median(Auto_local$mpg)))
Auto_local[["mpg01"]] = factor(as.integer(Auto_local$mpg > median(Auto_local$mpg)))
summary(Auto_local)
## (B) VISUAL DATA EXPLORATION
### WHICH FEATURES ARE LIKELY TO HAVE THE GREATEST IMPACT?
### DESCRIBE YOUR FINDINGS
pairs(Auto_local, lower.panel = NULL)
# CLear plot tab and close/save any open files
dev.off()
Auto_local$mpg01
summarise(Auto_local$mpg01)
summary(Auto_local$mpg01)
# Clear all existing variables in global environment
rm(list = ls())
# Save local copy of ISLR's Auto data
Auto_local = ISLR::Auto
Auto_local[["mpg01"]] = as.integer(Auto_local$mpg > median(Auto_local$mpg))
summary(Auto_local)
summary(Auto_local$mpg01)
summary(as.factor(Auto_local$mpg01))
summary(Auto_local$mpg01)
Auto_local[["mpg01"]] = factor(as.integer(Auto_local$mpg > median(Auto_local$mpg)))
summary(Auto_local$mpg01)
summary(Auto_local)
## (B) VISUAL DATA EXPLORATION
### WHICH FEATURES ARE LIKELY TO HAVE THE GREATEST IMPACT?
### DESCRIBE YOUR FINDINGS
pairs(Auto_local, lower.panel = NULL)
## (B) VISUAL DATA EXPLORATION
### WHICH FEATURES ARE LIKELY TO HAVE THE GREATEST IMPACT?
### DESCRIBE YOUR FINDINGS
pairs(Auto_local[, -9], lower.panel = NULL)
boxplot(horsepower~mpg01, data = Auto_local, main = "Horsepower and mpg Boxplot")
## Turn off built in echo command for code chunks
## stops the
# knitr::opts_chunk$set(echo = FALSE)
## Turn off the comments from the final output file
## This includes both the leading '#' from output
## as well as comments in the code chuncks
# knitr::opts_chunk$set(comment = NA)
# Set the working dorectory to the location where the file was saved
# setwd(dirname(rstudioapi::getSourceEditorContext()$path))
rstudioapi::getSourceEditorContext()
rstudioapi::getSourceEditorContext()$path
dirname(rstudioapi::getSourceEditorContext())
dirname(rstudioapi::getSourceEditorContext()$path)
## The
?rstudioapi
## The
??rstudioapi
## Step: 2
rstudioapi::getSourceEditorContext()$path
## Setp: 1
## The package below is a means of accesing
## information from your computer without having
## to manually open your terminal and find your current
## directory. It directly referes to the open file and
## finds the file path to where the file is saved.
class(rstudioapi::getSourceEditorContext())
## Setp: 1
## The package below is a means of accesing
## information from your computer without having
## to manually open your terminal and find your current
## directory. It directly referes to the open file and
## finds the file path to where the file is saved.
typeof(rstudioapi::getSourceEditorContext())
## Turn off built in echo command for code chunks
## stops the
# knitr::opts_chunk$set(echo = FALSE)
## Turn off the comments from the final output file
## This includes both the leading '#' from output
## as well as comments in the code chuncks
# knitr::opts_chunk$set(comment = NA)
## rstudioapi::getSourceEditorContext()
rstudioapi::getSourceEditorContext()
